Software Requirements Specification

Balderdash Text Game

by Carter Kanz, Sean Kuehlhorn, Louie Hernandez
Loyola University Chicago
March 17th 2016











Table Of Contents

I.	Introduction
Purpose
Document Conventions
Intended Audience and Reading Suggestion
Product Scope
References

II.	Overall Description
Product Perspective
Product Functions
User Classes and Characteristics
Operating Environment
Design and Implementation Constraints
User Documentation
Assumptions and Dependencies

III.	External Interface Requirements
User Interfaces
Hardware Interfaces
Software Interfaces
Communications Interfaces

IV.	System Features

V.	Other Nonfunctional Requirements
Performance Requirements
Safety Requirements
Security Requirements
Software Quality Attributes
Business Rules












I. Introduction

Purpose

The purpose of Text Games is to give users the communal experience of social party games without having to accumulate a physical library of games. Users will choose from a suite of games in a self-contained, peer organized environment.

Document Conventions

Bold face  is used on general topics or specific points of interest.  The remainder of the document will be written using the font Arial.

Intended Audience and Reading Suggestions

This Software Requirements document is intended for:

− Developers who can review project’s capabilities and
more easily understand where their efforts should be
targeted to improve or add more features to it.

− Users of this application who wish to read about what this project can do.

− Testers can use this document as a base for their testing strategy as
bugs are easier to find using a requirements document. This way testing becomes more
organized.

Product Scope
> Provide a short description of the software being specified and its purpose, including relevant benefits, objectives, and goals. Relate the software to corporate goals or business strategies. If a separate vision and scope document is available, refer to it rather than duplicating its contents here.

**Description**

Text Games is a mobile application that features a suite of mobile party games.

**Benefits**
* User hosted server eliminates the need of an always on server.
* Having many games in one place and the ability to easily switch between them.
**Purpose**

The purpose of Text Games is to give users the communal experience of social party games without having to accumulate a physical library of games. Users will choose from a suite of games in a self-contained, peer organized environment.
**Design and Implementation Constraints**

Our options will be limited in several capacities. A lot of the games that would be well-suited for our platform are under copyright and thus there may be limitations imposed from a legal standpoint as far as marketing the game platform. We plan to release our project without including copyrighted games by default but we will make games modular and document their structure so that other people can contribute their own game modules.

Perceived hardware limitations are performance issues stemming from running the server off of a mobile device. While this shouldn't be a problem with current smartphones, the games may not run as smoothly on older devices, the server may drain battery excessively or create excess heat if the device is plugged in. There may also be limitations with the Cordova implementation of the server. We consider this project to be worth pursuing in spite of these issues as it is unique and interesting as proof-of-concept for peer-to-peer computing.


Possible Customers/Clients:

Babaroga  
Software Company
Address: 1456 N Dayton St #204, Chicago, IL 60642
Phone: (312) 265-0545
Hours: 
Open today · 8AM–8PM
contact@babaroga.com
 
Jellyvision Inc  
Software Company
Address: 848 W Eastman St # 104, Chicago, IL 60642
Phone:(312) 266-0606
http://www.jellyvision.com/contact/
 
Jackbox Games
North/Clybourn Chicago
business@jackboxgames.com

Operating Environment

Most mobile devices, tbd.

Product Functions

* Host User creates lobby
* Host is given a room code that can be used to invite Player Users
* A game is selected by the host
* The game is played
**Product Perspective**

This product is a standalone application.

References

Application framework for JS

https://angular.io/

UI and Cordova/PhoneGap development tools

http://ionicframework.com

Cross platform hybrid-apps for mobile.

https://cordova.apache.org/

Second half of this gives an overview of what Cordova is.

http://csteach422.github.io/assets/docs/Comp422-week1.pdf

II. Overall Description

Safety Requirements

This Balderdash application is an open-source project, so anyone who has any doubts is able to check the source code.

Security Requirements

This Balderdash application will not affect data stored outside of its servers nor will it affect any other applications
installed on the user’s phone. It cannot cause any damage to the phone or its internal components.
Classes and Characteristics

**All kind of users:**
All users with some basic experience with Balderdash are
able to use this text game efficiently.

New users will have the option to use a Tutorial.


User Documentations

User Documentation can be found in this Google Drive.


Rough Draft UML Class:

Things to add:
ID()
RoomCode()






Feedback from Users:
Mostly affirmation that this would be a fun idea and something people would be interested. A useful bit of critical feedback I got was that having the games be hosted from a user’s own device (and thus requiring setup on the users’ parts) may be unpalatable for the non-tech oriented. Even if IP address information could be sent via SMS to players, the people I talked to showed hesitation seeing a foreign string of numbers to be input in a URL bar where text is “supposed” to go.

One potential user also brought to light the concern of router security hampering the functionality of the game. On Loyola’s campus even, it would be a toss-up on whether or not a peer-to-peer game would work as devices must be connected to the same access point to interact with one another. AP delegation in this case handled by mesh-networking which can be very hit or miss when users are near multiple APs.


